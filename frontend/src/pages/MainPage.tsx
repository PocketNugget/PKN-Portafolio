import React, { useState, useEffect, useRef } from "react";
import { motion } from "framer-motion";
import { useNavigate } from "react-router-dom";
import {
  FaArrowUp,
  FaGithub,
  FaLinkedin,
  FaInstagram,
  FaEye,
  FaCalendar,
  FaUser,
  FaYoutube,
} from "react-icons/fa";
import { FaXTwitter } from "react-icons/fa6";
import "../App.css";
import TechIconsBackground from "../components/TechIconsBackground";
import { fetchBlogPosts } from "../api";

interface Project {
  id: number;
  title: string;
  description: string;
  technologies: string[];
  githubUrl?: string;
  demoUrl?: string;
  image?: string;
  date?: string;
  achievement?: string;
  category: "cybersecurity" | "ai-research" | "development" | "leadership";
}

interface Skill {
  name: string;
  proficiency: number;
  category: "cybersecurity" | "development" | "ai-ml" | "tools";
  icon: string;
}

interface Experience {
  id: number;
  title: string;
  company: string;
  period: string;
  location: string;
  description: string[];
  technologies: string[];
  achievements: string[];
}

interface Certification {
  name: string;
  issuer: string;
  date: string;
  badge?: string;
  type: "education" | "certification" | "course";
}

interface Testimonial {
  id: number;
  name: string;
  role: string;
  company: string;
  content: string;
  avatar?: string;
}

interface BlogPost {
  id: number;
  title: string;
  content: string;
  created_at: string;
  html: string;
  tags?: string;
}

export default function MainPage() {
  const [activeSection, setActiveSection] = useState("hero");
  const [showScrollTop, setShowScrollTop] = useState(false);
  const [visibleSections, setVisibleSections] = useState<Set<string>>(
    new Set()
  );
  const [typedText, setTypedText] = useState("");
  const [currentTypingIndex, setCurrentTypingIndex] = useState(0);
  const [blogPosts, setBlogPosts] = useState<BlogPost[]>([]);
  const [selectedCategory, setSelectedCategory] = useState<string>("all");
  const navigate = useNavigate();
  const sectionRefs = useRef<{ [key: string]: HTMLElement | null }>({});

  // Typing animation texts
  const typingTexts = [
    "Cybersecurity Enthusiast",
    "AI Researcher",
    "SOC Analyst",
    "CTF Team Leader",
    "Software Engineer",
  ];

  // Goben Diego's enhanced data
  const projects: Project[] = [
    {
      id: 1,
      title: "Published AI Research: Performance Analysis of Generative Models",
      description:
        "Co-authored peer-reviewed publication 'Easy for Us, Complex for AI: Assessing the Coherence of Generated Realistic Images' published in Springer. Analyzed and benchmarked metrics to evaluate the realism of images generated by advanced AI models including GANs, Transformers, and Diffusion Models.",
      technologies: [
        "Python",
        "Machine Learning",
        "GANs",
        "Transformers",
        "Diffusion Models",
        "Research",
      ],
      date: "October 2024",
      achievement: "Published in Springer",
      category: "ai-research",
    },
    {
      id: 2,
      title: "Global Capture the Flag (CTF) Competition: Offensive Security",
      description:
        "Achieved Top 3.5% worldwide placement in Hack the Box Cyber Apocalypse CTF. Directed and mentored team members in advanced offensive security disciplines including cryptography, web exploitation, and digital forensics.",
      technologies: [
        "Cryptography",
        "Web Exploitation",
        "Digital Forensics",
        "Penetration Testing",
        "CTF",
      ],
      date: "March 2025",
      achievement: "Top 3.5% Worldwide",
      category: "cybersecurity",
    },
    {
      id: 3,
      title: "iOS Application Development: WayZT App",
      description:
        "Spearheaded development of a 1st place award-winning iOS application in competitive Swift UI Hackathon. Implemented machine learning model for waste classification and integrated MapView for geolocation of recycling centers.",
      technologies: [
        "Swift",
        "SwiftUI",
        "Machine Learning",
        "MapKit",
        "iOS",
        "Hackathon",
      ],
      githubUrl: "https://github.com/goben-diego/wayzt-app",
      date: "February - March 2024",
      achievement: "1st Place Hackathon Winner",
      category: "development",
    },
    {
      id: 4,
      title: "Hacking & Exploit Development: CTF-Writeups Repository",
      description:
        "Developed and curated public repository of solutions for cybersecurity challenges. Authored detailed writeups on topics including Cross-Site Scripting (XSS), Android application analysis, and binary exploitation.",
      technologies: [
        "XSS",
        "Android Analysis",
        "Binary Exploitation",
        "GitHub",
        "Writeups",
      ],
      githubUrl: "https://github.com/goben-diego",
      date: "January 2025",
      achievement: "Public Repository",
      category: "cybersecurity",
    },
    {
      id: 5,
      title: "Home Server Infrastructure & Automation",
      description:
        "Developed and managed a comprehensive home server setup using Raspberry Pi and Docker containers. Implemented automated system processes, user log management, and technical report generation with LaTeX.",
      technologies: [
        "Docker",
        "Raspberry Pi",
        "Linux",
        "Automation",
        "LaTeX",
        "Infrastructure",
      ],
      date: "December 2024 - Present",
      achievement: "Personal Infrastructure",
      category: "development",
    },
    {
      id: 6,
      title: "Personal Portfolio Website - PKN-Portafolio",
      description:
        "Full-stack portfolio website built with React frontend and Deno backend, featuring blog management, admin dashboard, and responsive design. Hosted on Raspberry Pi 5 homelab server with Docker containerization.",
      technologies: [
        "React",
        "TypeScript",
        "Deno",
        "SQLite",
        "Docker",
        "Raspberry Pi",
        "CSS3",
        "JWT Auth",
      ],
      githubUrl: "https://github.com/goben-diego/PKN-Portafolio",
      demoUrl: "https://pocketnugget.com",
      date: "January 2025 - Present",
      achievement: "Self-Hosted Portfolio",
      category: "development",
    },
    {
      id: 7,
      title: "Where2Skate - Android Skatepark Discovery App",
      description:
        "Community-driven Android application for discovering, sharing, and rating skateparks and street spots. Built with Kotlin and Jetpack Compose, featuring Firebase authentication, Google Maps integration, and real-time database with Cloud Firestore.",
      technologies: [
        "Kotlin",
        "Jetpack Compose",
        "Firebase",
        "Google Maps",
        "Cloud Firestore",
        "Android",
      ],
      githubUrl: "https://github.com/goben-diego/where2skate",
      demoUrl:
        "https://play.google.com/store/apps/details?id=com.example.where2skate",
      date: "December 2024 - Present",
      achievement: "Community-Driven App",
      category: "development",
    },
    {
      id: 8,
      title: "Hackztecs Cybersecurity Organization Leadership",
      description:
        "Leading and mentoring competitive cybersecurity teams through 8+ national and international Capture the Flag events. Organized workshops and training sessions on security topics.",
      technologies: [
        "Leadership",
        "Team Management",
        "Training",
        "CTF",
        "Cybersecurity",
      ],
      date: "January 2024 - Present",
      achievement: "President & Team Leader",
      category: "leadership",
    },
  ];

  const skills: Skill[] = [
    // Cybersecurity
    {
      name: "Kali Linux",
      proficiency: 85,
      category: "cybersecurity",
      icon: "fab fa-linux",
    },
    {
      name: "Metasploit",
      proficiency: 85,
      category: "cybersecurity",
      icon: "fas fa-tools",
    },
    {
      name: "Burp Suite",
      proficiency: 85,
      category: "cybersecurity",
      icon: "fas fa-bug",
    },
    {
      name: "Ghidra",
      proficiency: 80,
      category: "cybersecurity",
      icon: "fas fa-search",
    },
    {
      name: "Darktrace Platform",
      proficiency: 60,
      category: "cybersecurity",
      icon: "fas fa-shield-alt",
    },

    // Development
    {
      name: "Python",
      proficiency: 90,
      category: "development",
      icon: "fab fa-python",
    },
    {
      name: "C",
      proficiency: 85,
      category: "development",
      icon: "fas fa-file-code",
    },
    {
      name: "Java",
      proficiency: 85,
      category: "development",
      icon: "fab fa-java",
    },
    {
      name: "Bash",
      proficiency: 85,
      category: "development",
      icon: "fas fa-terminal",
    },
    {
      name: "JavaScript",
      proficiency: 85,
      category: "development",
      icon: "fab fa-js",
    },
    {
      name: "LaTeX",
      proficiency: 85,
      category: "development",
      icon: "fas fa-file-alt",
    },
    {
      name: "PHP",
      proficiency: 60,
      category: "development",
      icon: "fab fa-php",
    },
    {
      name: "PostgreSQL",
      proficiency: 60,
      category: "development",
      icon: "fas fa-database",
    },
    {
      name: "SQLite",
      proficiency: 60,
      category: "development",
      icon: "fas fa-database",
    },

    // AI & Machine Learning
    {
      name: "Machine Learning",
      proficiency: 85,
      category: "ai-ml",
      icon: "fas fa-brain",
    },
    {
      name: "Artificial Intelligence",
      proficiency: 80,
      category: "ai-ml",
      icon: "fas fa-robot",
    },
    {
      name: "GANs",
      proficiency: 75,
      category: "ai-ml",
      icon: "fas fa-network-wired",
    },
    {
      name: "Transformers",
      proficiency: 70,
      category: "ai-ml",
      icon: "fas fa-cogs",
    },
    {
      name: "Diffusion Models",
      proficiency: 70,
      category: "ai-ml",
      icon: "fas fa-magic",
    },

    // Tools & Platforms
    {
      name: "Docker",
      proficiency: 90,
      category: "tools",
      icon: "fab fa-docker",
    },
    {
      name: "Visual Studio Code",
      proficiency: 90,
      category: "tools",
      icon: "fas fa-code",
    },
    {
      name: "Ubuntu",
      proficiency: 85,
      category: "tools",
      icon: "fab fa-ubuntu",
    },
    {
      name: "Fedora",
      proficiency: 85,
      category: "tools",
      icon: "fab fa-fedora",
    },
  ];

  const experience: Experience[] = [
    {
      id: 1,
      title: "Junior SOC Analyst",
      company: "TBSEK",
      period: "April 2025 - Present",
      location: "Puebla, Mexico",
      description: [
        "Leverage industry-standard SIEM tools to proactively monitor, detect, and analyze security threats in real-time",
        "Collaborate with cross-functional teams to strengthen security protocols and streamline incident response procedures",
        "Conduct initial triage of security incidents, escalating as necessary to ensure timely resolution",
      ],
      technologies: [
        "SIEM",
        "Incident Response",
        "Security Monitoring",
        "Threat Analysis",
      ],
      achievements: [
        "Real-time threat detection",
        "Improved incident response time",
        "Cross-functional collaboration",
      ],
    },
    {
      id: 2,
      title: "Software Engineer Intern",
      company: "T-Systems",
      period: "April 2024 - July 2024",
      location: "Puebla, Mexico",
      description: [
        "Engineered a full-stack course-tracking platform using Angular and MySQL, serving as a key developer in the project",
        "Achieved a 40% improvement in internal learning outcomes by designing and implementing a dynamic, user-friendly interface",
      ],
      technologies: ["Angular", "MySQL", "Full-stack Development", "UI/UX"],
      achievements: [
        "40% improvement in learning outcomes",
        "Full-stack platform development",
        "User experience optimization",
      ],
    },
    {
      id: 3,
      title: "Infrastructure Engineer",
      company: "iOS Lab Development Team",
      period: "August 2024 - Present",
      location: "Puebla, Mexico",
      description: [
        "Deploy and manage containerized server applications using Docker on Raspberry Pi infrastructure",
        "Automate system processes, including user log management and the generation of technical reports with LaTeX",
      ],
      technologies: ["Docker", "Raspberry Pi", "Automation", "LaTeX", "Linux"],
      achievements: [
        "Containerized infrastructure",
        "Automated reporting system",
        "Raspberry Pi deployment",
      ],
    },
  ];

  const certifications: Certification[] = [
    {
      name: "Bachelor of Science in Computer Systems Engineering",
      issuer: "Universidad de las Americas Puebla (UDLAP)",
      date: "Expected May 2026",
      type: "education",
    },
    {
      name: "Microservices with Node.js and React",
      issuer: "Udemy",
      date: "January 2025",
      type: "course",
    },
    {
      name: "Prototype Design",
      issuer: "UPAEP",
      date: "July 2021",
      type: "course",
    },
  ];

  const testimonials: Testimonial[] = [
    {
      id: 1,
      name: "Hack the Box",
      role: "Cybersecurity Platform",
      company: "Global CTF Competition",
      content:
        "Goben Diego achieved Top 3.5% worldwide placement in the Cyber Apocalypse CTF, demonstrating exceptional skills in offensive security and team leadership.",
    },
    {
      id: 2,
      name: "Springer",
      role: "Academic Publisher",
      company: "Research Publication",
      content:
        "Co-authored peer-reviewed research on AI performance analysis, contributing valuable insights to the field of generative model evaluation.",
    },
    {
      id: 3,
      name: "Swift UI Hackathon",
      role: "Competition Platform",
      company: "iOS Development",
      content:
        "Secured 1st place in competitive hackathon with innovative waste detection and recycling app featuring machine learning integration.",
    },
  ];

  // Typing animation effect
  useEffect(() => {
    const currentText = typingTexts[currentTypingIndex];
    let currentCharIndex = 0;

    const typingInterval = setInterval(() => {
      if (currentCharIndex <= currentText.length) {
        setTypedText(currentText.slice(0, currentCharIndex));
        currentCharIndex++;
      } else {
        clearInterval(typingInterval);
        setTimeout(() => {
          setCurrentTypingIndex((prev) => (prev + 1) % typingTexts.length);
        }, 2000);
      }
    }, 100);

    return () => clearInterval(typingInterval);
  }, [currentTypingIndex]);

  useEffect(() => {
    const handleScroll = () => {
      const scrollPos = window.scrollY;
      setShowScrollTop(scrollPos > 500);

      const sections = document.querySelectorAll("section[id]");
      const scrollPosWithOffset = scrollPos + 100;

      sections.forEach((section) => {
        const sectionTop = (section as HTMLElement).offsetTop;
        const sectionHeight = (section as HTMLElement).offsetHeight;
        const sectionId = section.getAttribute("id");

        if (
          scrollPosWithOffset >= sectionTop &&
          scrollPosWithOffset < sectionTop + sectionHeight
        ) {
          setActiveSection(sectionId || "hero");
        }
      });
    };

    // Intersection Observer for animations
    const observerOptions = {
      threshold: 0.1,
      rootMargin: "0px 0px -50px 0px",
    };

    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          const sectionId = entry.target.getAttribute("id");
          if (sectionId) {
            setVisibleSections(
              (prev) => new Set([...Array.from(prev), sectionId])
            );

            // Animate skill bars when skills section is visible
            if (sectionId === "skills") {
              setTimeout(() => {
                const skillItems = document.querySelectorAll(".skill-item");
                skillItems.forEach((item, index) => {
                  setTimeout(() => {
                    item.classList.add("animate");
                  }, index * 100);
                });
              }, 300);
            }
          }
        }
      });
    }, observerOptions);

    // Observe all sections
    const sections = document.querySelectorAll("section[id]");
    sections.forEach((section) => observer.observe(section));

    window.addEventListener("scroll", handleScroll);
    return () => {
      window.removeEventListener("scroll", handleScroll);
      observer.disconnect();
    };
  }, []);

  const scrollToSection = (sectionId: string) => {
    const element = document.getElementById(sectionId);
    if (element) {
      element.scrollIntoView({ behavior: "smooth" });
    }
  };

  const scrollToTop = () => {
    window.scrollTo({ top: 0, behavior: "smooth" });
  };

  const getCategoryColor = (category: string) => {
    switch (category) {
      case "cybersecurity":
        return "var(--accent-red)";
      case "ai-research":
        return "var(--accent-purple)";
      case "development":
        return "var(--accent-blue)";
      case "leadership":
        return "var(--accent-green)";
      default:
        return "var(--accent-blue)";
    }
  };

  const filteredProjects =
    selectedCategory === "all"
      ? projects
      : projects.filter((project) => project.category === selectedCategory);

  // Fetch blog posts
  useEffect(() => {
    fetchBlogPosts().then(setBlogPosts).catch(console.error);
  }, []);

  const handleReadMore = (post: BlogPost) => {
    navigate(`/blog/${post.id}`);
  };

  const allTags = Array.from(
    new Set(
      blogPosts
        .flatMap((post) =>
          post.tags ? post.tags.split(",").map((t) => t.trim()) : []
        )
        .filter((t) => t)
    )
  );
  const TAGS = ["All", ...allTags];
  const [selectedTag, setSelectedTag] = useState<string>("All");

  const filteredPosts =
    selectedTag === "All"
      ? blogPosts
      : blogPosts.filter(
          (post) =>
            post.tags &&
            post.tags
              .split(",")
              .map((t) => t.trim())
              .includes(selectedTag)
        );

  return (
    <div className="portfolio-container">
      <TechIconsBackground />

      {/* Hero Section */}
      <section
        id="hero"
        className={`hero-section ${
          visibleSections.has("hero") ? "visible" : ""
        }`}
        ref={(el) => (sectionRefs.current["hero"] = el)}
      >
        <div className="hero-background-animation">
          <div className="floating-shapes">
            <div className="shape shape-1"></div>
            <div className="shape shape-2"></div>
            <div className="shape shape-3"></div>
          </div>
        </div>

        <div className="hero-content">
          <div className="hero-text">
            <h1 className="hero-title">
              <span className="hero-name">Goben Diego</span>
              <span className="hero-title-separator">|</span>
              <span className="hero-role">PocketNugget</span>
            </h1>

            <div className="hero-typing">
              <span className="typing-text">{typedText}</span>
              <span className="typing-cursor">|</span>
            </div>

            <p className="hero-description">
              Junior SOC Analyst with expertise in penetration testing, machine
              learning, and secure software development. Published AI researcher
              and Top 3.5% CTF competitor passionate about building intelligent
              systems that protect against evolving cyber threats.
            </p>

            <div className="hero-stats">
              <div className="stat-item">
                <div className="stat-number">Top 3.5%</div>
                <div className="stat-label">Global CTF</div>
              </div>
              <div className="stat-item">
                <div className="stat-number">8+</div>
                <div className="stat-label">CTF Events</div>
              </div>
              <div className="stat-item">
                <div className="stat-number">1st</div>
                <div className="stat-label">Swift Hackathon</div>
              </div>
              <div className="stat-item">
                <div className="stat-number">Springer</div>
                <div className="stat-label">Published</div>
              </div>
            </div>

            <div className="hero-actions">
              <button
                className="btn btn-primary"
                onClick={() => scrollToSection("projects")}
              >
                <i className="fas fa-code"></i>
                View Projects
              </button>
            </div>

            <div className="hero-socials">
              <a
                href="https://github.com/PocketNugget"
                target="_blank"
                rel="noopener noreferrer"
                className="social-link"
                title="GitHub"
              >
                <FaGithub />
              </a>
              <a
                href="https://www.linkedin.com/in/goben-diego/"
                target="_blank"
                rel="noopener noreferrer"
                className="social-link"
                title="LinkedIn"
              >
                <FaLinkedin />
              </a>
              <a
                href="https://twitter.com/cyberpkn"
                target="_blank"
                rel="noopener noreferrer"
                className="social-link"
                title="X (Twitter)"
              >
                <FaXTwitter />
              </a>
              <a
                href="https://www.instagram.com/pocket_nugget/"
                target="_blank"
                rel="noopener noreferrer"
                className="social-link"
                title="Instagram"
              >
                <FaInstagram />
              </a>
              <a
                href="https://www.youtube.com/@Nuggz_TV"
                target="_blank"
                rel="noopener noreferrer"
                className="social-link"
                title="YouTube"
              >
                <FaYoutube />
              </a>
              <a
                href="mailto:goben.ca.pkn@hotmail.com"
                className="social-link"
                title="Email"
              >
                <i className="fas fa-envelope"></i>
              </a>
            </div>
          </div>

          <div className="hero-visual">
            <div className="hero-avatar">
              <div className="avatar-core">
                <div className="avatar-placeholder">
                  <img
                    src="/Nugg.png"
                    alt="PocketNugget"
                    className="nugg-avatar-img"
                  />
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* About Section */}
      <section
        id="about"
        className={`section about-section ${
          visibleSections.has("about") ? "visible" : ""
        }`}
        ref={(el) => (sectionRefs.current["about"] = el)}
      >
        <div className="container">
          <h2 className="section-title">
            <span className="title-icon">👨‍💻</span>
            About Me
          </h2>

          <div className="about-content">
            <div className="about-text">
              <div className="about-intro">
                <h3>
                  Proactive Cybersecurity Professional & Software Engineer
                </h3>
                <p>
                  I'm a results-driven specialist in Security Operations (SOC),
                  Artificial Intelligence research, and secure application
                  development. Currently serving as Junior SOC Analyst at TBSEK,
                  I leverage industry-standard SIEM tools to proactively
                  monitor, detect, and analyze security threats in real-time.
                </p>
              </div>

              <div className="about-details">
                <div className="detail-item">
                  <i className="fas fa-shield-alt"></i>
                  <div>
                    <h4>Cybersecurity Expertise</h4>
                    <p>
                      Penetration testing, incident response, threat analysis,
                      and secure software development with hands-on experience
                      in guiding cybersecurity teams.
                    </p>
                  </div>
                </div>

                <div className="detail-item">
                  <i className="fas fa-brain"></i>
                  <div>
                    <h4>AI Research</h4>
                    <p>
                      Published researcher in Springer with focus on generative
                      model evaluation, machine learning, and AI-driven security
                      solutions.
                    </p>
                  </div>
                </div>

                <div className="detail-item">
                  <i className="fas fa-users"></i>
                  <div>
                    <h4>Leadership</h4>
                    <p>
                      President of Hackztecs Cybersecurity Organization, leading
                      and mentoring competitive teams through 8+ national and
                      international CTF events.
                    </p>
                  </div>
                </div>
              </div>

              <div className="about-quote">
                <blockquote>
                  "Gaining and sharing knowledge is the best way to grow."
                </blockquote>
                <cite>- PocketNugget</cite>
              </div>
            </div>

            <div className="about-visual">
              <div className="about-card">
                <div className="card-header">
                  <i className="fas fa-user-secret"></i>
                  <h3>PocketNugget</h3>
                </div>
                <div className="card-content">
                  <div className="info-row">
                    <span className="label">Location:</span>
                    <span className="value">Puebla, Mexico</span>
                  </div>
                  <div className="info-row">
                    <span className="label">Experience:</span>
                    <span className="value">2+ Years</span>
                  </div>
                  <div className="info-row">
                    <span className="label">Education:</span>
                    <span className="value">UDLAP (Expected 2026)</span>
                  </div>
                  <div className="info-row">
                    <span className="label">Languages:</span>
                    <span className="value">Spanish, English, French</span>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* Skills Section */}
      <section
        id="skills"
        className={`section skills-section ${
          visibleSections.has("skills") ? "visible" : ""
        }`}
        ref={(el) => (sectionRefs.current["skills"] = el)}
      >
        <div className="container">
          <h2 className="section-title">
            <span className="title-icon">⚡</span>
            Technical Skills
          </h2>

          <div className="skills-content">
            {["cybersecurity", "development", "ai-ml", "tools"].map(
              (category) => (
                <div key={category} className="skill-category">
                  <h3 className="skill-category-title">
                    <i
                      className={
                        category === "cybersecurity"
                          ? "fas fa-shield-alt"
                          : category === "development"
                          ? "fas fa-code"
                          : category === "ai-ml"
                          ? "fas fa-brain"
                          : "fas fa-tools"
                      }
                    ></i>
                    {category === "cybersecurity" && "Cybersecurity"}
                    {category === "development" && "Development"}
                    {category === "ai-ml" && "AI & Machine Learning"}
                    {category === "tools" && "Tools & Platforms"}
                  </h3>

                  <div className="skills-grid">
                    {skills
                      .filter((skill) => skill.category === category)
                      .map((skill) => (
                        <div key={skill.name} className="skill-card">
                          <div className="skill-icon">
                            <i className={skill.icon}></i>
                          </div>
                          <div className="skill-details">
                            <h4 className="skill-name">{skill.name}</h4>
                            <div className="skill-level">
                              <div className="level-indicator">
                                {skill.proficiency >= 80 && (
                                  <span className="level proficient">
                                    Proficient
                                  </span>
                                )}
                                {skill.proficiency < 80 && (
                                  <span className="level familiar">
                                    Familiar
                                  </span>
                                )}
                              </div>
                            </div>
                          </div>
                        </div>
                      ))}
                  </div>
                </div>
              )
            )}
          </div>
        </div>
      </section>

      {/* Experience Section */}
      <section
        id="experience"
        className={`section experience-section ${
          visibleSections.has("experience") ? "visible" : ""
        }`}
        ref={(el) => (sectionRefs.current["experience"] = el)}
      >
        <div className="container">
          <h2 className="section-title">
            <span className="title-icon">💼</span>
            Professional Experience
          </h2>

          <div className="timeline">
            {experience.map((exp, index) => (
              <div
                key={exp.id}
                className={`timeline-item ${
                  index % 2 === 0 ? "left" : "right"
                }`}
              >
                <div className="timeline-content">
                  <div className="timeline-header">
                    <h3 className="timeline-title">{exp.title}</h3>
                    <div className="timeline-company">{exp.company}</div>
                    <div className="timeline-period">{exp.period}</div>
                    <div className="timeline-location">
                      <i className="fas fa-map-marker-alt"></i>
                      {exp.location}
                    </div>
                  </div>

                  <div className="timeline-description">
                    <ul>
                      {exp.description.map((desc, idx) => (
                        <li key={idx}>{desc}</li>
                      ))}
                    </ul>
                  </div>

                  <div className="timeline-technologies">
                    <h4>Technologies:</h4>
                    <div className="tech-tags">
                      {exp.technologies.map((tech) => (
                        <span key={tech} className="tech-tag">
                          {tech}
                        </span>
                      ))}
                    </div>
                  </div>

                  <div className="timeline-achievements">
                    <h4>Key Achievements:</h4>
                    <ul>
                      {exp.achievements.map((achievement, idx) => (
                        <li key={idx}>{achievement}</li>
                      ))}
                    </ul>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Projects Section */}
      <section
        id="projects"
        className={`section projects-section ${
          visibleSections.has("projects") ? "visible" : ""
        }`}
        ref={(el) => (sectionRefs.current["projects"] = el)}
      >
        <div className="container">
          <h2 className="section-title">
            <span className="title-icon">🚀</span>
            Featured Projects
          </h2>

          <div className="projects-filter">
            <button
              className={`filter-btn ${
                selectedCategory === "all" ? "active" : ""
              }`}
              onClick={() => setSelectedCategory("all")}
            >
              All
            </button>
            <button
              className={`filter-btn ${
                selectedCategory === "cybersecurity" ? "active" : ""
              }`}
              onClick={() => setSelectedCategory("cybersecurity")}
            >
              Cybersecurity
            </button>
            <button
              className={`filter-btn ${
                selectedCategory === "ai-research" ? "active" : ""
              }`}
              onClick={() => setSelectedCategory("ai-research")}
            >
              AI Research
            </button>
            <button
              className={`filter-btn ${
                selectedCategory === "development" ? "active" : ""
              }`}
              onClick={() => setSelectedCategory("development")}
            >
              Development
            </button>
            <button
              className={`filter-btn ${
                selectedCategory === "leadership" ? "active" : ""
              }`}
              onClick={() => setSelectedCategory("leadership")}
            >
              Leadership
            </button>
          </div>

          <div className="projects-grid">
            {filteredProjects.map((project) => (
              <div
                key={project.id}
                className={`project-card ${project.category}`}
              >
                <div className="project-header">
                  <div
                    className="project-category"
                    style={{
                      backgroundColor: getCategoryColor(project.category),
                    }}
                  >
                    {project.category.replace("-", " ").toUpperCase()}
                  </div>
                  <div className="project-achievement">
                    {project.achievement}
                  </div>
                </div>

                <div className="project-content">
                  <h3 className="project-title">{project.title}</h3>
                  <p className="project-description">{project.description}</p>

                  <div className="project-meta">
                    <span className="project-date">
                      <i className="fas fa-calendar"></i>
                      {project.date}
                    </span>
                  </div>

                  <div className="project-technologies">
                    {project.technologies.map((tech) => (
                      <span key={tech} className="tech-tag">
                        {tech}
                      </span>
                    ))}
                  </div>

                  <div className="project-links">
                    {project.githubUrl && (
                      <a
                        href={project.githubUrl}
                        target="_blank"
                        rel="noopener noreferrer"
                        className="project-link"
                      >
                        <i className="fab fa-github"></i> View Code
                      </a>
                    )}
                    <button className="project-link">
                      <i className="fas fa-external-link-alt"></i> Learn More
                    </button>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Education & Certifications Section */}
      <section
        id="certifications"
        className={`section certifications-section ${
          visibleSections.has("certifications") ? "visible" : ""
        }`}
        ref={(el) => (sectionRefs.current["certifications"] = el)}
      >
        <div className="container">
          <h2 className="section-title">
            <span className="title-icon">🎓</span>
            Education & Certifications
          </h2>

          <div className="certifications-grid">
            {certifications.map((cert, index) => (
              <div key={index} className={`certification-card ${cert.type}`}>
                <div className="certification-badge">
                  <i
                    className={
                      cert.type === "education"
                        ? "fas fa-graduation-cap"
                        : cert.type === "certification"
                        ? "fas fa-certificate"
                        : "fas fa-book"
                    }
                  ></i>
                </div>
                <div className="certification-content">
                  <h3 className="certification-name">{cert.name}</h3>
                  <p className="certification-issuer">{cert.issuer}</p>
                  <p className="certification-date">{cert.date}</p>
                  <div className="certification-type">
                    {cert.type.toUpperCase()}
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Testimonials Section */}
      <section
        id="testimonials"
        className={`section testimonials-section ${
          visibleSections.has("testimonials") ? "visible" : ""
        }`}
        ref={(el) => (sectionRefs.current["testimonials"] = el)}
      >
        <div className="container">
          <h2 className="section-title">
            <span className="title-icon">🏆</span>
            Achievements & Recognition
          </h2>

          <div className="testimonials-grid">
            {testimonials.map((testimonial) => (
              <div key={testimonial.id} className="testimonial-card">
                <div className="testimonial-content">
                  <div className="quote-icon">
                    <i className="fas fa-quote-left"></i>
                  </div>
                  <p className="testimonial-text">{testimonial.content}</p>
                </div>
                <div className="testimonial-author">
                  <div className="author-avatar">
                    <i className="fas fa-trophy"></i>
                  </div>
                  <div className="author-info">
                    <h4 className="author-name">{testimonial.name}</h4>
                    <p className="author-role">{testimonial.role}</p>
                    <p className="author-company">{testimonial.company}</p>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Blog Section */}
      <section
        id="blog"
        className={`section blog-section ${
          visibleSections.has("blog") ? "visible" : ""
        }`}
        ref={(el) => (sectionRefs.current["blog"] = el)}
      >
        <div className="container">
          <h2 className="section-title">
            <span className="title-icon">📝</span>
            Latest Articles & Research
          </h2>

          <div className="blog-tags-bar">
            {TAGS.map((tag) => (
              <button
                key={tag}
                className={`blog-tag-pill${
                  selectedTag === tag ? " active" : ""
                }`}
                onClick={() => setSelectedTag(tag)}
              >
                {tag}
              </button>
            ))}
          </div>

          <div className="blog-grid">
            {filteredPosts.length === 0 ? (
              <div className="blog-card">
                <div className="blog-content">
                  <h3 className="blog-title">No blog posts yet</h3>
                  <p className="blog-excerpt">
                    Check back soon for cybersecurity insights, AI research, and
                    technical tutorials.
                  </p>
                </div>
              </div>
            ) : (
              filteredPosts.slice(0, 3).map((post, index) => (
                <motion.div
                  key={post.id}
                  className={`blog-card ${index === 0 ? "featured" : ""}`}
                  initial={{ opacity: 0, y: 30 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ delay: index * 0.1, duration: 0.6 }}
                  whileHover={{ scale: 1.02 }}
                >
                  <div className="blog-content">
                    {index === 0 && <div className="blog-badge">Featured</div>}
                    <h3 className="blog-title">{post.title}</h3>
                    <div
                      className="blog-excerpt"
                      dangerouslySetInnerHTML={{
                        __html:
                          post.html.replace(/<[^>]+>/g, "").slice(0, 200) +
                          (post.html.replace(/<[^>]+>/g, "").length > 200
                            ? "..."
                            : ""),
                      }}
                    />
                    <div className="blog-meta">
                      <span className="blog-date">
                        <FaCalendar />
                        {new Date(post.created_at).toLocaleDateString()}
                      </span>
                      <span className="blog-tags-list">
                        {post.tags &&
                          post.tags.split(",").map((tag) => (
                            <span key={tag} className="blog-tag-pill inline">
                              {tag.trim()}
                            </span>
                          ))}
                      </span>
                    </div>
                    <button
                      className="read-more-btn"
                      onClick={() => handleReadMore(post)}
                    >
                      <FaEye /> Read Full Article
                    </button>
                  </div>
                </motion.div>
              ))
            )}
          </div>

          <div className="blog-cta">
            <p>
              Read more about my cybersecurity research, CTF writeups, and
              technical tutorials.
            </p>
            <button
              className="btn btn-secondary"
              onClick={() => (window.location.href = "/blog")}
            >
              <i className="fas fa-book-open"></i>
              View All Posts
            </button>
          </div>
        </div>
      </section>

      {/* Contact Section */}
      {/* Contact section removed as per user request */}

      {/* Footer */}
      <footer className="footer">
        <div className="container">
          <div className="footer-content">
            <div className="footer-brand">
              <div className="brand-logo">
                <i className="fas fa-shield-alt"></i>
                <span>PocketNugget</span>
              </div>
              <p>
                Securing the digital frontier through innovative AI-driven
                solutions
              </p>
            </div>

            <div className="footer-links">
              <div className="link-group">
                <h4>Navigation</h4>
                <a href="#about">About</a>
                <a href="#skills">Skills</a>
                <a href="#projects">Projects</a>
                <a href="#contact">Contact</a>
              </div>

              <div className="link-group">
                <h4>Connect</h4>
                <a
                  href="https://github.com/goben-diego"
                  target="_blank"
                  rel="noopener noreferrer"
                >
                  GitHub
                </a>
                <a href="mailto:goben.ca.pkn@hotmail.com">Email</a>
                <a href="tel:+522227155667">Phone</a>
                <a
                  href="https://linkedin.com"
                  target="_blank"
                  rel="noopener noreferrer"
                >
                  LinkedIn
                </a>
              </div>
            </div>
          </div>

          <div className="footer-bottom">
            <p>
              &copy; {new Date().getFullYear()} Goben Diego Constantino Aguirre.
              All rights reserved.
            </p>
            <p>Built with React, TypeScript, and a passion for security.</p>
          </div>
        </div>
      </footer>

      {/* Scroll to Top Button */}
      <button
        className={`scroll-to-top ${showScrollTop ? "visible" : ""}`}
        onClick={scrollToTop}
        aria-label="Scroll to top"
      >
        <i className="fas fa-arrow-up"></i>
      </button>
    </div>
  );
}
